.\" Copyright (C) 2017 Kevin Boone 
.\" Permission is granted to any individual or institution to use, copy, or
.\" redistribute this software so long as all of the original files are
.\" included, that it is not sold for profit, and that this copyright notice
.\" is retained.
.\"
.TH dbcmd-put 1 "March 2017"
.SH NAME
Upload files to Dropbox
.SH SYNOPSIS
.B dbcmd 
put\ [options]\ {local_paths...}\ [remote_path] 
.PP

.SH DESCRIPTION
\fIdbcmd put\fR uploads one or more files to the Dropbox server, 
attempting to maintain a folder structure on the server that matches
the loocal filesystem. Each 
\fIlocal-path\fR argument can specify a single file, a directory, or
a file pattern with wildcards. Unless a single file is specified, the
\fI{remote-path}\fR argument must denote a Dropbox folder that already
exists (but see notes below). 

This command will not upload files which have the same SHA-256 hash as
they have on the server -- these are deemed to be unchanged. It will never
delete remote files that don't have counterparts on the local filesystem -- 
files are only ever added.  

This command is not intended to synchronize an entire Dropbox account;
rather it is intended to upload 
particular files or directories that have been modified locally. 

.SH EXAMPLE

.BI dbcmd\ -r\ put\ accounts/*.doc\ /docs/accounts/ 

Upload files that match pattern \fI*.doc\fR from directory \fIaccounts/\fR 
on the 
local filesystem, maintaining
the same folder structure in the remote directory \fI/docs/accounts/\fR.

.SH "OPTIONS"

See main manual page.

.SH NOTES

.SS Dry-run operation

The \fI--dry-run\fR options will show the pathnanes on the server and
client, of the files that will be transferred, without transferring
them. Note that this dry run can be as time-consuming as an actual
transfer, because the file hash values still have to be computed, to
determine whether a transfer will take place or not.

.SS Folder naming 

Names that refer to Dropbox folders \fImust\fR start with a forward
slash (/).

Whether the local name ends with a forward slash has particular meaning when
copying directories. If a directory name does not end with a forward
slash, then the directory name itself is preserved in the target folder.
If it does end with a forward slash, then only the contents of the directory
are copied -- the directory name does not form part of the target
pathname. So these two operations are equivalent:

.BI dbcmd\ -r\ put\ ./docs/accounts/\ /docs/acounts 

and

.BI dbcmd\ -r\ put\ ./docs/accounts\ /docs

This
naming follows the same semantics as \fIrsync(1)\fR.
Unlike \fIrsync(1)\fR, however, this utility will accept file wildcard 
characters in
a folder expansion. Only files matching
the pattern will be copied.

In general, if an upload operation transfer multiple files, then the
target must be a folder. However, if the target name ends with a 
forward slash, it is assumed that the user knows that a folder is
intended, so it will be created if it does not already exist. 
Using an explicit forward slash this way is also a little quicker, because
the utility does not have to ask the Dropbox server whether the
directory exists or not.
 

.SS File size limit 

This utility cannot upload files larger than 150Mb. This limit is imposed
by the Dropbox HTTP API.

.SS Timestamps

The timestamp set on the file will be the time it is accepted by the
server. 
It is not possible to synchronize timestamps, and not necessary for
correct local/remote synchronization, because the
Dropbox sync process uses hashes to determine whether
a file is up to date.

.SS Authentication

This utility, like all that use the Dropbox API, uses token-based
authentication against the Dropbox server. It will prompt for a token
the first time it is executed, and store the token for future use.
See 
.SS \fIdbcmd(1)\fR 
for more details.


.SH SEE ALSO 

.SS \fIdbcmd(1)\fR 


.\" end of file
